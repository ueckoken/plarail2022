name: build and publish image

on:
  push:
    branches: [deployment]

jobs:
  external:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend/external
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: ./backend/external/go.mod
          cache: true
          cache-dependency-path: ./backend/external/go.sum
      - name: Build Go binary
        run: |-
          make build
      - name: set tag
        run: |-
          export TIMESTAMP=$(date +%s)
          export SHA=$(echo ${{ github.sha }} | cut -c1-7)
          echo "IMAGE_TAG=$SHA-$TIMESTAMP" >> $GITHUB_ENV
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        uses: docker/build-push-action@v3
        with:
          context: ./backend/external
          platforms: linux/amd64
          push: true
          tags: ghcr.io/ueckoken/plarail2022-external:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  internal:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend/internal
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: ./backend/internal/go.mod
          cache: true
          cache-dependency-path: ./backend/internal/go.sum
      - name: set tag
        run: |-
          export TIMESTAMP=$(date +%s)
          export SHA=$(echo ${{ github.sha }} | cut -c1-7)
          echo "IMAGE_TAG=$SHA-$TIMESTAMP" >> $GITHUB_ENV
      - name: Build Go binary
        run: |-
          make build
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        uses: docker/build-push-action@v3
        with:
          context: ./backend/internal
          platforms: linux/amd64
          push: true
          tags: ghcr.io/ueckoken/plarail2022-internal:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  frontend-site:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend/site
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: set tag
        run: |-
          export TIMESTAMP=$(date +%s)
          export SHA=$(echo ${{ github.sha }} | cut -c1-7)
          echo "IMAGE_TAG=$SHA-$TIMESTAMP" >> $GITHUB_ENV
      - name: Build
        uses: docker/build-push-action@v3
        with:
          context: ./frontend/site
          file: ./frontend/site/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ghcr.io/ueckoken/plarail2022-frontend:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  multicaster:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend/multicaster
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: set tag
        run: |-
          export TIMESTAMP=$(date +%s)
          export SHA=$(echo ${{ github.sha }} | cut -c1-7)
          echo "IMAGE_TAG=$SHA-$TIMESTAMP" >> $GITHUB_ENV
      - name: Build
        uses: docker/build-push-action@v3
        with:
          context: ./backend/multicaster
          file: ./backend/multicaster/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ghcr.io/ueckoken/plarail2022-frontend-python:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  positioning:
    defaults:
      run:
        working-directory: ./backend/positioning
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: set tag
        run: |-
          export TIMESTAMP=$(date +%s)
          export SHA=$(echo ${{ github.sha }} | cut -c1-7)
          echo "IMAGE_TAG=$SHA-$TIMESTAMP" >> $GITHUB_ENV
      - name: Build
        uses: docker/build-push-action@v3
        with:
          context: ./backend/positioning
          file: ./backend/positioning/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ghcr.io/ueckoken/plarail2022-positioning:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  momo_sender:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend/momo_sender

    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - name: set tag
        run: |-
          export TIMESTAMP=$(date +%s)
          export SHA=$(echo ${{ github.sha }} | cut -c1-7)
          echo "IMAGE_TAG=$SHA-$TIMESTAMP" >> $GITHUB_ENV
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        uses: docker/build-push-action@v3
        with:
          context: ./frontend/momo_sender/
          file: ./frontend/momo_sender/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ghcr.io/ueckoken/plarail2022-webrtc-sender:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  skyway_receiver:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend/skyway_receiver
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: set tag
        run: |-
          export TIMESTAMP=$(date +%s)
          export SHA=$(echo ${{ github.sha }} | cut -c1-7)
          echo "IMAGE_TAG=$SHA-$TIMESTAMP" >> $GITHUB_ENV
      - name: Build
        uses: docker/build-push-action@v3
        with:
          context: ./frontend/skyway_receiver/
          file: ./frontend/skyway_receiver/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ghcr.io/ueckoken/plarail2022-receiver-test:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
