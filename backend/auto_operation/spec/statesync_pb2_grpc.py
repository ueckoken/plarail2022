# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import statesync_pb2 as statesync__pb2


class StateManagerStub(object):
    """StateManagerはexternalにて立ち上げます。ポイント情報などを管理します。
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UpdatePointState = channel.unary_unary(
                '/StateManager/UpdatePointState',
                request_serializer=statesync__pb2.UpdatePointStateRequest.SerializeToString,
                response_deserializer=statesync__pb2.UpdatePointStateResponse.FromString,
                )


class StateManagerServicer(object):
    """StateManagerはexternalにて立ち上げます。ポイント情報などを管理します。
    """

    def UpdatePointState(self, request, context):
        """UpdatePointStateはexternalへPointState更新要求を送る。
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StateManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UpdatePointState': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePointState,
                    request_deserializer=statesync__pb2.UpdatePointStateRequest.FromString,
                    response_serializer=statesync__pb2.UpdatePointStateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'StateManager', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class StateManager(object):
    """StateManagerはexternalにて立ち上げます。ポイント情報などを管理します。
    """

    @staticmethod
    def UpdatePointState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/StateManager/UpdatePointState',
            statesync__pb2.UpdatePointStateRequest.SerializeToString,
            statesync__pb2.UpdatePointStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class PointStateNotificationStub(object):
    """Notificationはauto_operationなどで立ち上げます。StateManagerからポイント情報などの変更を受けとります。
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.NotifyPointState = channel.unary_unary(
                '/PointStateNotification/NotifyPointState',
                request_serializer=statesync__pb2.NotifyPointStateRequest.SerializeToString,
                response_deserializer=statesync__pb2.NotifyPointStateResponse.FromString,
                )


class PointStateNotificationServicer(object):
    """Notificationはauto_operationなどで立ち上げます。StateManagerからポイント情報などの変更を受けとります。
    """

    def NotifyPointState(self, request, context):
        """NotifyPointStateはexternalからauto-operationやinternalへPointStateの更新情報を伝える。
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PointStateNotificationServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'NotifyPointState': grpc.unary_unary_rpc_method_handler(
                    servicer.NotifyPointState,
                    request_deserializer=statesync__pb2.NotifyPointStateRequest.FromString,
                    response_serializer=statesync__pb2.NotifyPointStateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'PointStateNotification', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PointStateNotification(object):
    """Notificationはauto_operationなどで立ち上げます。StateManagerからポイント情報などの変更を受けとります。
    """

    @staticmethod
    def NotifyPointState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/PointStateNotification/NotifyPointState',
            statesync__pb2.NotifyPointStateRequest.SerializeToString,
            statesync__pb2.NotifyPointStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
